<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime">

    <TextFormattingMode x:Key="uxTextFormattingMode">Display</TextFormattingMode>
    <TextHintingMode x:Key="uxTextHintingMode">Fixed</TextHintingMode>
    <TextRenderingMode x:Key="uxTextRenderingMode">ClearType</TextRenderingMode>
    <Thickness x:Key="uxMargin">4</Thickness>
    <Thickness x:Key="uxDoubleMargin">8</Thickness>
    <Thickness x:Key="uxTopMargin">0,4,0,0</Thickness>
    <Thickness x:Key="uxBottomMargin">0,0,0,4</Thickness>
    <Thickness x:Key="uxHorizontalMargin">4,0</Thickness>
    <Thickness x:Key="uxDoubleHorizontalMargin">8,0</Thickness>
    <Thickness x:Key="uxVerticalMargin">0,4</Thickness>
    <Thickness x:Key="uxDoubleVerticalMargin">0,8</Thickness>
    <HorizontalAlignment x:Key="uxControlHorizontalAlignment">Stretch</HorizontalAlignment>
    <VerticalAlignment x:Key="uxControlVerticalAlignment">Center</VerticalAlignment>

    <HorizontalAlignment x:Key="uxItemsControlHorizontalAlignment">Stretch</HorizontalAlignment>
    <VerticalAlignment x:Key="uxItemsControlVerticalAlignment">Stretch</VerticalAlignment>

    <HorizontalAlignment x:Key="uxButtonHorizontalAlignment">Right</HorizontalAlignment>
    <VerticalAlignment x:Key="uxButtonVerticalAlignment">Center</VerticalAlignment>
    <sys:Double x:Key="uxButtonMinWidth">75</sys:Double>
    <sys:Double x:Key="uxButtonMinHeight">23</sys:Double>
    <Thickness x:Key="uxButtonPadding">4,1</Thickness>

    <Style x:Key="BaseFrameworkElementStyle"
           TargetType="{x:Type FrameworkElement}">
        <Setter Property="TextOptions.TextFormattingMode"
                Value="{StaticResource uxTextFormattingMode}" />
        <Setter Property="TextOptions.TextHintingMode"
                Value="{StaticResource uxTextHintingMode}" />
        <Setter Property="TextOptions.TextRenderingMode"
                Value="{StaticResource uxTextRenderingMode}" />
        <Setter Property="Margin"
                Value="{StaticResource uxMargin}" />
        <Setter Property="HorizontalAlignment"
                Value="{StaticResource uxControlHorizontalAlignment}" />
        <Setter Property="VerticalAlignment"
                Value="{StaticResource uxControlVerticalAlignment}" />
    </Style>

    <Style TargetType="{x:Type ButtonBase}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}">
        <Setter Property="MinWidth"
                Value="{StaticResource uxButtonMinWidth}" />
        <Setter Property="MinHeight"
                Value="{StaticResource uxButtonMinHeight}" />
        <Setter Property="HorizontalAlignment"
                Value="{StaticResource uxButtonHorizontalAlignment}" />
        <Setter Property="VerticalAlignment"
                Value="{StaticResource uxButtonVerticalAlignment}" />
    </Style>

    <Style TargetType="{x:Type Button}"
           BasedOn="{StaticResource {x:Type ButtonBase}}" />

    <Style TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource {x:Type ButtonBase}}" />

    <Style TargetType="{x:Type ProgressBar}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}">
        <Setter Property="Width"
                Value="160" />
        <Setter Property="Height"
                Value="15" />
    </Style>

    <Style TargetType="{x:Type CheckBox}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}" />

    <Style TargetType="{x:Type RadioButton}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}" />

    <Style TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}">
        <Setter Property="Height"
                Value="{StaticResource uxButtonMinHeight}" />
        <Setter Property="Padding"
                Value="0,2" />
    </Style>

    <Style TargetType="{x:Type RichTextBox}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}">
        <Setter Property="Height"
                Value="{StaticResource uxButtonMinHeight}" />
    </Style>

    <Style TargetType="{x:Type PasswordBox}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}">
        <Setter Property="Height"
                Value="{StaticResource uxButtonMinHeight}" />
        <Setter Property="Padding"
                Value="0,2" />
    </Style>

    <Style TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}">
        <Setter Property="Height"
                Value="{StaticResource uxButtonMinHeight}" />
    </Style>

    <Style TargetType="{x:Type GroupBox}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}">
        <Setter Property="Padding"
                Value="5,7" />
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Padding"
                Value="0,5,1,1" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Style.Triggers>
            <Trigger Property="HorizontalContentAlignment"
                     Value="Left">
                <Setter Property="VerticalAlignment"
                        Value="Bottom" />
                <Setter Property="Padding"
                        Value="4,0,0,1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListBox}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}" />

    <Style TargetType="{x:Type ListView}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}" />

    <Style TargetType="{x:Type DatePicker}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}" />

    <Style TargetType="{x:Type DataGrid}"
           BasedOn="{StaticResource BaseFrameworkElementStyle}" />

    <!--<Style x:Key="BaseToolBarButtonStyle"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <Image Name="Icon">
                            <Image.Source>
                                <BitmapImage UriSource="{Binding Content, RelativeSource={RelativeSource Self}, FallbackValue='pack://application:,,,/Blackjack.App;component/Resources/no_image.png'}" />
                            </Image.Source>
                        </Image>
                        <TextBlock Name="Caption"
                                   Text="{Binding Tag, RelativeSource={RelativeSource Self}, FallbackValue='Noop'}"
                                   HorizontalAlignment="Center" />
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ButtonBase}}}"
                                     Value="False">
                            <Setter TargetName="Icon"
                                    Property="Opacity"
                                    Value="0.5" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding}"
                                     Value="{x:Null}">
                            <Setter TargetName="Icon"
                                    Property="Opacity"
                                    Value="0.5" />
                            <Setter TargetName="Caption"
                                    Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource BaseToolBarButtonStyle}">
    </Style>

    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
           TargetType="{x:Type RadioButton}"
           BasedOn="{StaticResource BaseToolBarButtonStyle}">
    </Style>

    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
           TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource BaseToolBarButtonStyle}" />-->
</ResourceDictionary>